// Generated by `wit-bindgen` 0.11.0. DO NOT EDIT!
#ifndef __BINDINGS_URL_SHORTENER_H
#define __BINDINGS_URL_SHORTENER_H
#ifdef __cplusplus
extern "C" {
#endif

#include <stdlib.h>
#include <string.h>
#include <stdint.h>
#include <stdbool.h>

typedef struct {
  char*ptr;
  size_t len;
} url_shortener_string_t;

typedef struct {
  url_shortener_string_t f0;
  url_shortener_string_t f1;
} url_shortener_tuple2_string_string_t;

typedef struct {
  url_shortener_tuple2_string_string_t *ptr;
  size_t len;
} url_shortener_list_tuple2_string_string_t;

typedef struct {
  url_shortener_string_t *ptr;
  size_t len;
} url_shortener_list_string_t;

// Imported Functions from `wasi:cli/environment`
// Get the POSIX-style environment variables.
// 
// Each environment variable is provided as a pair of string variable names
// and string value.
// 
// Morally, these are a value import, but until value imports are available
// in the component model, this import function should return the same
// values each time it is called.
void wasi_cli_environment_get_environment(url_shortener_list_tuple2_string_string_t *ret);
// Get the POSIX-style arguments to the program.
void wasi_cli_environment_get_arguments(url_shortener_list_string_t *ret);
// Return a path that programs should use as their initial current working
// directory, interpreting . as shorthand for this.
bool wasi_cli_environment_initial_cwd(url_shortener_string_t *ret);

// Exported Functions from `golem:template/api`
void exports_golem_template_api_get(url_shortener_string_t *ret);
uint64_t exports_golem_template_api_stats(void);

// Helper Functions

void url_shortener_tuple2_string_string_free(url_shortener_tuple2_string_string_t *ptr);
void url_shortener_list_tuple2_string_string_free(url_shortener_list_tuple2_string_string_t *ptr);
void url_shortener_list_string_free(url_shortener_list_string_t *ptr);
void url_shortener_string_set(url_shortener_string_t *ret, const char*s);
void url_shortener_string_dup(url_shortener_string_t *ret, const char*s);
void url_shortener_string_free(url_shortener_string_t *ret);

#ifdef __cplusplus
}
#endif
#endif
