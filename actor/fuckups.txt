after changing interface to:
```
interface api {
  set: func(value: string)
  get: func() -> string
}
```
got the following:
make compile
wit-bindgen c ./wit
Generating "url_shortener.c"
Generating "url_shortener.h"
Generating "url_shortener_component_type.o"
../wasi-sdk-20.0/bin/clang++ --sysroot ../wasi-sdk-20.0/share/wasi-sysroot main.cpp url_shortener.c url_shortener_component_type.o -o ./build/url_shortener.module.wasm
clang-16: warning: treating 'c' input as 'c++' when in C++ mode, this behavior is deprecated [-Wdeprecated]
url_shortener.c:29:14: error: assigning to 'char *' from incompatible type 'void *'
  ret->ptr = cabi_realloc(NULL, 0, 1, ret->len * 1);
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1 error generated.
make: *** [Makefile:13: compile] Error 1

--------------------------
```Error: Internal server error: PreviousInvocationFailed```

How to unfail it?

---------------------------
```golem-cli worker connect --template-name url_shortener --worker-name default_worker_name
thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Error("unknown variant `Golem`, expected one of `badRequest`, `unauthorized`, `limitExceeded`, `golem`, `gatewayTimeout`, `notFound`, `alreadyExists`", line: 1, column: 26)', /home/rob/.cargo/registry/src/index.crates.io-6f17d22bba15001f/golem-cli-0.0.5/src/clients/worker.rs:333:33
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace```

doesn't tell me much about what's wrong

----------------------------
it is really hard to understand how to read environment variables or arguments in the program

what is a lifecycle? where to put initialization code?

also it seems that there is implicit dependency between WIT bindings and standard library
which makes it even harder to understand what's going on