// Generated by `wit-bindgen` 0.11.0. DO NOT EDIT!
package shortener_manager

// #include "shortener_manager.h"
import "C"

import "unsafe"

type WasiCliEnvironmentTuple2StringStringT struct {
	F0 string
	F1 string
}

type GolemShortenerManagerApiWorker struct {
	Id      string
	Name    string
	Version string
}

// Import functions from wasi:cli/environment
func WasiCliEnvironmentGetEnvironment() []WasiCliEnvironmentTuple2StringStringT {
	var ret C.shortener_manager_list_tuple2_string_string_t
	C.wasi_cli_environment_get_environment(&ret)
	var lift_ret []WasiCliEnvironmentTuple2StringStringT
	lift_ret = make([]WasiCliEnvironmentTuple2StringStringT, ret.len)
	if ret.len > 0 {
		for lift_ret_i := 0; lift_ret_i < int(ret.len); lift_ret_i++ {
			var empty_lift_ret C.shortener_manager_tuple2_string_string_t
			lift_ret_ptr := *(*C.shortener_manager_tuple2_string_string_t)(unsafe.Pointer(uintptr(unsafe.Pointer(ret.ptr)) +
				uintptr(lift_ret_i)*unsafe.Sizeof(empty_lift_ret)))
			var list_lift_ret WasiCliEnvironmentTuple2StringStringT
			var list_lift_ret_F0 string
			list_lift_ret_F0 = C.GoStringN(lift_ret_ptr.f0.ptr, C.int(lift_ret_ptr.f0.len))
			list_lift_ret.F0 = list_lift_ret_F0
			var list_lift_ret_F1 string
			list_lift_ret_F1 = C.GoStringN(lift_ret_ptr.f1.ptr, C.int(lift_ret_ptr.f1.len))
			list_lift_ret.F1 = list_lift_ret_F1
			lift_ret[lift_ret_i] = list_lift_ret
		}
	}
	return lift_ret
}

func WasiCliEnvironmentGetArguments() []string {
	var ret C.shortener_manager_list_string_t
	C.wasi_cli_environment_get_arguments(&ret)
	var lift_ret []string
	lift_ret = make([]string, ret.len)
	if ret.len > 0 {
		for lift_ret_i := 0; lift_ret_i < int(ret.len); lift_ret_i++ {
			var empty_lift_ret C.shortener_manager_string_t
			lift_ret_ptr := *(*C.shortener_manager_string_t)(unsafe.Pointer(uintptr(unsafe.Pointer(ret.ptr)) +
				uintptr(lift_ret_i)*unsafe.Sizeof(empty_lift_ret)))
			var list_lift_ret string
			list_lift_ret = C.GoStringN(lift_ret_ptr.ptr, C.int(lift_ret_ptr.len))
			lift_ret[lift_ret_i] = list_lift_ret
		}
	}
	return lift_ret
}

func WasiCliEnvironmentInitialCwd() Option[string] {
	var ret C.shortener_manager_option_string_t
	C.wasi_cli_environment_initial_cwd(&ret)
	var lift_ret Option[string]
	if ret.is_some {
		var lift_ret_val string
		lift_ret_val = C.GoStringN(ret.val.ptr, C.int(ret.val.len))
		lift_ret.Set(lift_ret_val)
	} else {
		lift_ret.Unset()
	}
	return lift_ret
}

// Export functions from golem-shortener:manager/api
var golem_shortener_manager_api ExportsGolemShortenerManagerApi = nil

func SetExportsGolemShortenerManagerApi(i ExportsGolemShortenerManagerApi) {
	golem_shortener_manager_api = i
}

type ExportsGolemShortenerManagerApi interface {
	Hello() string
	Spawn(url string) Result[string, string]
	GetWorkers() []GolemShortenerManagerApiWorker
}

//export exports_golem_shortener_manager_api_hello
func ExportsGolemShortenerManagerApiHello(ret *C.shortener_manager_string_t) {
	result := golem_shortener_manager_api.Hello()
	var lower_result C.shortener_manager_string_t

	lower_result.ptr = C.CString(result)
	lower_result.len = C.size_t(len(result))
	*ret = lower_result

}

//export exports_golem_shortener_manager_api_spawn
func ExportsGolemShortenerManagerApiSpawn(url *C.shortener_manager_string_t, ret *C.shortener_manager_result_string_string_t) {
	defer C.shortener_manager_string_free(url)
	var lift_url string
	lift_url = C.GoStringN(url.ptr, C.int(url.len))
	result := golem_shortener_manager_api.Spawn(lift_url)
	var lower_result C.shortener_manager_result_string_string_t
	lower_result.is_err = result.IsErr()
	if result.IsOk() {
		lower_result_ptr := (*C.shortener_manager_string_t)(unsafe.Pointer(&lower_result.val))
		var lower_result_val C.shortener_manager_string_t

		lower_result_val.ptr = C.CString(result.Unwrap())
		lower_result_val.len = C.size_t(len(result.Unwrap()))
		*lower_result_ptr = lower_result_val
	} else {
		lower_result_ptr := (*C.shortener_manager_string_t)(unsafe.Pointer(&lower_result.val))
		var lower_result_val C.shortener_manager_string_t

		lower_result_val.ptr = C.CString(result.UnwrapErr())
		lower_result_val.len = C.size_t(len(result.UnwrapErr()))
		*lower_result_ptr = lower_result_val
	}
	*ret = lower_result

}

//export exports_golem_shortener_manager_api_get_workers
func ExportsGolemShortenerManagerApiGetWorkers(ret *C.shortener_manager_list_golem_shortener_manager_api_worker_t) {
	result := golem_shortener_manager_api.GetWorkers()
	var lower_result C.shortener_manager_list_golem_shortener_manager_api_worker_t
	if len(result) == 0 {
		lower_result.ptr = nil
		lower_result.len = 0
	} else {
		var empty_lower_result C.golem_shortener_manager_api_worker_t
		lower_result.ptr = (*C.golem_shortener_manager_api_worker_t)(C.malloc(C.size_t(len(result)) * C.size_t(unsafe.Sizeof(empty_lower_result))))
		lower_result.len = C.size_t(len(result))
		for lower_result_i := range result {
			lower_result_ptr := (*C.golem_shortener_manager_api_worker_t)(unsafe.Pointer(uintptr(unsafe.Pointer(lower_result.ptr)) +
				uintptr(lower_result_i)*unsafe.Sizeof(empty_lower_result)))
			var lower_result_ptr_value C.golem_shortener_manager_api_worker_t
			var lower_result_ptr_value_id C.shortener_manager_string_t

			lower_result_ptr_value_id.ptr = C.CString(result[lower_result_i].Id)
			lower_result_ptr_value_id.len = C.size_t(len(result[lower_result_i].Id))
			lower_result_ptr_value.id = lower_result_ptr_value_id
			var lower_result_ptr_value_name C.shortener_manager_string_t

			lower_result_ptr_value_name.ptr = C.CString(result[lower_result_i].Name)
			lower_result_ptr_value_name.len = C.size_t(len(result[lower_result_i].Name))
			lower_result_ptr_value.name = lower_result_ptr_value_name
			var lower_result_ptr_value_version C.shortener_manager_string_t

			lower_result_ptr_value_version.ptr = C.CString(result[lower_result_i].Version)
			lower_result_ptr_value_version.len = C.size_t(len(result[lower_result_i].Version))
			lower_result_ptr_value.version = lower_result_ptr_value_version
			*lower_result_ptr = lower_result_ptr_value
		}
	}
	*ret = lower_result

}
